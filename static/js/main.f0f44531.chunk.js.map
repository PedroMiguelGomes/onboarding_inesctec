{"version":3,"sources":["components/utils/Navigation.jsx","components/utils/Footer.jsx","components/utils/Home.jsx","components/Chap.jsx","components/chapters/Introducao.jsx","components/chapters/TasksInst.jsx","components/chapters/Instituicao.jsx","components/centers/TasksCESE.jsx","components/chapters/Form.jsx","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","handleLogout","e","sessionStorage","clear","history","push","window","location","reload","state","user","center","loggedInUser","getItem","this","setState","JSON","parse","console","log","className","Navbar","variant","expand","Brand","to","src","width","height","alt","Toggle","aria-controls","Collapse","id","Nav","style","maxHeight","navbarscroll","NavDropdown","title","Item","type","onClick","Component","withRouter","Footer","Login","useState","username","setUsername","password","setPassword","setUser","useHistory","useEffect","foundUser","handleSubmit","a","preventDefault","axios","get","response","i","data","length","name","setItem","stringify","Container","Image","onSubmit","Group","controlId","Control","placeholder","value","onChange","target","Button","disabled","Chap","progress1","progress2","progress3","progress4","setTimeout","then","resp","Row","Col","roundedCircle","ProgressBar","now","md","React","Introducao","routeChange","bind","userID","completed","post","res","button","href","rel","TasksInst","routeChange2","tasks","remainingUserTasks","tasksInst","taskID","Card","Body","Text","map","task","centerService","Title","toDo","some","Instituicao","question","submited","correct","answer","toString","questions","remainingQuestions","chapter","number","Check","label","answer1","answer2","answer3","answer4","validateForm","Badge","TasksCESE","Form","frameborder","marginheight","marginwidth","App","basename","exact","path","Home","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0f44531.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Navigation extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: \"\",\r\n      center: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const loggedInUser = sessionStorage.getItem(\"user\");\r\n    if (loggedInUser) {\r\n      this.setState({ user: JSON.parse(loggedInUser)[\"name\"] });\r\n      console.log(JSON.parse(loggedInUser));\r\n      this.setState({ center: JSON.parse(loggedInUser)[\"centerService\"] });\r\n    }\r\n  }\r\n\r\n  handleLogout = (e) => {\r\n    sessionStorage.clear();\r\n    let path = '/';\r\n    this.props.history.push(path);\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navigation\">\r\n        <Navbar className=\"navbarColor\" variant=\"dark\" expand=\"lg\" >\r\n          <Navbar.Brand>\r\n            <Link className=\"nav-link\" to=\"/chap\">\r\n              <img\r\n                src=\"logo.png\"\r\n                width=\"auto\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"React Bootstrap logo\"\r\n              />\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbarscroll\" />\r\n          <Navbar.Collapse id=\"navbarscroll\">\r\n            {this.state.user ? (\r\n              <>\r\n                <Nav\r\n                  className=\"mr-auto my-2 my-lg-0\"\r\n                  style={{ maxHeight: '100px' }}\r\n                  navbarscroll=\"true\"\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/chap\">Acolhimento & Integração</Link>\r\n                  <Link className=\"nav-link\" to=\"/tasksCESE\">{this.state.center}</Link>\r\n                </Nav>\r\n                <Nav\r\n                  className=\"ml-auto my-2 my-lg-0\"\r\n                  style={{ maxHeight: '100px' }}\r\n                  navbarscroll=\"true\"\r\n                >\r\n                  <NavDropdown className=\"nome\" title={this.state.user} id=\"navbarScrollingDropdown\">\r\n                    <NavDropdown.Item><button type=\"button\" className=\"buttonLogout\" onClick={this.handleLogout}>Logout</button></NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </>\r\n            ) : (<></>)}\r\n\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n} export default withRouter(Navigation);","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  \r\n  return (\r\n    <div className=\"footer\">\r\n      <footer className=\"py-4 fixed-bottom footer\">\r\n        <div className=\"container\">\r\n          <p className=\"m-0 text-center\">\r\n            Copyright? &copy; INESC TEC\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport axios from 'axios';\r\nimport \"../../App.css\";\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [now, setNow] = useState(true);\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = sessionStorage.getItem(\"user\");\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      setUser(foundUser);\r\n    }\r\n  }, []);\r\n\r\n  // logout the user\r\n  \r\n\r\n  // login the user\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await axios.get('https://blooming-island-42972.herokuapp.com/users/');\r\n\r\n    for(var i = 0; i < response.data.length; i++) {\r\n      if (username === response.data[i].name && password === response.data[i].password) {\r\n        setUser(response.data[i]);\r\n        sessionStorage.setItem(\"user\", JSON.stringify(response.data[i]));\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  if (user) {\r\n    let path = `/chap`;\r\n    history.push(path);\r\n    window.location.reload();\r\n  }\r\n\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n\r\n\r\n  return (\r\n    <Container className=\"mx-auto\" style={{ width: \"300px\" }}>\r\n      <br />\r\n      <Image className =\"logoHome\" src=\"logo.png\" />\r\n      <Form className=\"\" onSubmit={handleSubmit} >\r\n        <br />\r\n        <Form.Group controlId=\"email\" >\r\n          <Form.Control\r\n            type=\"username\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n\r\n      </Form>\r\n    </Container>\r\n  );\r\n}","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport \"../App.css\";\r\n\r\n\r\nexport default class Chap extends React.Component {\r\n  \r\n  state = {\r\n    progress1: \"\",\r\n    progress2: \"\",\r\n    progress3: \"\",\r\n    progress4: \"\",\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {axios.get('https://blooming-island-42972.herokuapp.com/progressUser/' + JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] + '/').then(resp => {\r\n        this.setState({ progress1: resp.data[\"progress\"][\"1\"] });\r\n        this.setState({ progress2: resp.data[\"progress\"][\"2\"] });\r\n        this.setState({ progress3: resp.data[\"progress\"][\"3\"] });\r\n        this.setState({ progress4: resp.data[\"progress\"][\"4\"] });\r\n    })}, 100);\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <Container>\r\n        <br />\r\n        <Row className=\"header\">\r\n          <Col>\r\n            <h1>Acolhimento &amp; Integração</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"header\">\r\n          <Col>\r\n            <br />\r\n            <Link className=\"nav-link\" to=\"/introducao\">\r\n              <h3>Introdução</h3>\r\n              <Image className=\"logos\" src=\"instructions.jpg\" roundedCircle />\r\n              <br />\r\n              <br />\r\n              <ProgressBar now={this.state.progress1} />\r\n            </Link>\r\n          </Col>\r\n          <Col>\r\n            <br />\r\n            <Link className=\"nav-link\" to=\"/instituicao\">\r\n              <h3>Instituição</h3>\r\n              <Image className=\"logos\" src=\"institution.png\" roundedCircle />\r\n              <br />\r\n              <br />\r\n              <ProgressBar now={this.state.progress2} />\r\n            </Link>\r\n          </Col>\r\n          <Col>\r\n            <br />\r\n            <Link className=\"nav-link\" to=\"/tasksInst\">\r\n              <h3>Questões Práticas</h3>\r\n              <Image className=\"logos\" src=\"practice.png\" roundedCircle />\r\n              <br />\r\n              <br />\r\n              <ProgressBar now={this.state.progress3} />\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col></Col>\r\n          <Col md=\"6\">\r\n            <br/>\r\n            <Link className=\"nav-link\" to=\"/form\">\r\n              <h3>Questionário</h3>\r\n              <Image className=\"logos\" src=\"form.png\" roundedCircle />\r\n              <br />\r\n              <br />\r\n              <ProgressBar now={this.state.progress4} />\r\n            </Link>\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n      </Container >\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Introducao extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.routeChange = this.routeChange.bind(this);\r\n\r\n        this.state = {\r\n            userID: '',\r\n            user: '',\r\n            completed: false\r\n        };\r\n    }\r\n\r\n    routeChange(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        //url/updateUserQuestion/userID/chapter/level/score/\r\n        if (this.state.completed === \"false\") {\r\n            axios.post('https://blooming-island-42972.herokuapp.com/updateUserQuestion/' + this.state.userID + '/5/')\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                })\r\n        }\r\n\r\n        let path = '/instituicao';\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ user: JSON.parse(sessionStorage.getItem(\"user\"))[\"name\"] });\r\n        this.setState({ userID: JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] });\r\n        axios.get('https://blooming-island-42972.herokuapp.com/questionXLevel/' + JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] + '/1/1/')\r\n            .then(res => {\r\n                this.setState({ completed: res.data['question'] })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let button;\r\n        if (this.state.completed === \"false\") {\r\n            button = <Button variant=\"primary\" className=\"px-4 nextLevel\" onClick={this.routeChange}>Concluir Nivel</Button>;\r\n        } else {\r\n            button = <Button variant=\"info\" className=\"px-4 nextLevel\" onClick={this.routeChange}>Instituição</Button>;\r\n        }\r\n        return (\r\n            <div>\r\n                <h3 className=\"titleIntroduction\">Olá {this.state.user}, bem-vindo ao INESC TEC!</h3>\r\n                <h5>Para os próximos desafios recomendamos que vejas o nosso website.</h5>\r\n                <a href=\"https://www.inesctec.pt/pt/instituicao\" target=\"_blank\" rel=\"noreferrer\">Instituição INESC TEC</a>\r\n                <br />\r\n                {button}\r\n            </div>\r\n        );\r\n    }\r\n} export default withRouter(Introducao);","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\n\r\nclass TasksInst extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.routeChange = this.routeChange.bind(this);\r\n    this.routeChange2 = this.routeChange2.bind(this);\r\n\r\n    this.state = {\r\n      tasks: [],\r\n      remainingUserTasks: [],\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('https://blooming-island-42972.herokuapp.com/tasks/').then(res => {\r\n      this.setState({ tasks: res.data });\r\n    });\r\n    axios.get('https://blooming-island-42972.herokuapp.com/user/' + JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] + '/').then(res => {\r\n      this.setState({ remainingUserTasks: res.data.tasksInst })\r\n    });\r\n  }\r\n\r\n  routeChange(taskID) {\r\n\r\n    //url/updateUserTaskInst/userID/taskID/\r\n    axios.post('https://blooming-island-42972.herokuapp.com/updateUserTaskInst/' + JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] + '/' + taskID + '/')\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      });\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  routeChange2(e) {\r\n\r\n    e.preventDefault();\r\n    let path = '/tasksCESE';\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"desafios\">\r\n          <Card.Body>\r\n            <Card.Text>\r\n              Olá novamente! Nesta etapa propomos-te a realização de alguns desafios que te irão dar a conhecer algumas das ferramentas mais utilizadas no INESC TEC e que facilitam a comunicação e a partilha de informação entre todos.\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n        {\r\n          this.state.tasks.map(task => {\r\n            return task.centerService === \"general\" ?\r\n              <>\r\n                <Card className=\"desafios\">\r\n                  <Card.Body>\r\n                    <Card.Title>{task.task}</Card.Title>\r\n                    <Card.Text>{task.toDo}</Card.Text>\r\n                    {(() => {\r\n                      if (!this.state.remainingUserTasks.some(e => e.id === task.id)) {\r\n                        return (\r\n                          <Button variant=\"success\">Concluído</Button>\r\n                        )\r\n                      } else {\r\n                        return (\r\n                          <Button onClick={this.routeChange.bind(this, task.id)} variant=\"danger\">Concluir Desafio</Button>\r\n                        )\r\n                      }\r\n                    })()}\r\n                  </Card.Body>\r\n                </Card>\r\n              </>\r\n              :\r\n              <>\r\n              </>\r\n          })}\r\n        <Card className=\"desafios\">\r\n          <Card.Body>\r\n            <Card.Text>\r\n              Parabéns! Concluíste com sucesso a segunda etapa deste jogo. Vamos conhecer o teu serviço/centro.\r\n            </Card.Text>\r\n            <Button onClick={this.routeChange2} variant=\"info\">Centro/Serviço</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n} export default withRouter(TasksInst);\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass Instituicao extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.routeChange = this.routeChange.bind(this);\r\n\r\n    this.state = {\r\n      questions: [],\r\n      answer: 0,\r\n      userID: '',\r\n      submited: false,\r\n      remainingQuestions: [],\r\n      question: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ userID: JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] });\r\n    axios.get('https://blooming-island-42972.herokuapp.com/questions/')\r\n      .then(res => {\r\n        const questions = res.data;\r\n        this.setState({ questions });\r\n      });\r\n    axios.get('https://blooming-island-42972.herokuapp.com/user/' + JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] + '/')\r\n      .then(res => {\r\n        const remainingQuestions = res.data.questions;\r\n        this.setState({ remainingQuestions });\r\n      });\r\n  }\r\n\r\n  handleSubmit = (question, e) => {\r\n\r\n    const submited = true;\r\n    this.setState({ submited });\r\n    console.log(question.correct);\r\n    console.log(this.state.answer)\r\n\r\n    if (this.state.answer === question.correct.toString()) {\r\n      axios.post('https://blooming-island-42972.herokuapp.com/updateUserQuestion/' + this.state.userID + '/' + question.id + '/')\r\n        .then(res => {\r\n          console.log(res);\r\n        })\r\n      setTimeout(() => {\r\n        let path = '/instituicao';\r\n        this.props.history.push(path);\r\n        window.location.reload();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  routeChange(e) {\r\n\r\n    e.preventDefault();\r\n    let path = '/tasksInst';\r\n    this.props.history.push(path);\r\n}\r\n\r\n  validateForm() {\r\n    return this.state.answer > 0;\r\n  }\r\n\r\n  render() {\r\n    let button = <Button variant=\"info\" onClick={this.routeChange}>Questões Práticas</Button>\r\n\r\n    return (\r\n      <Container className=\"p-3 header\" >\r\n        <h1 className=\"\">Acolhimento - Instituição</h1>\r\n\r\n        <Card className=\"pergunta pergunta1\">\r\n          <Card.Body>\r\n            <Card.Text className=\"justifyText\">\r\n              Sabias que o INESC TEC é uma instituição privada sem fins lucrativos que se centra em atividades de investigação científica e desenvolvimento tecnológico, transferência de tecnologia, consultoria avançada e formação, e pré-incubação de novas empresas de base tecnológica? Temos um <a href=\"https://www.inesctec.pt/pt/instituicao#structure\" target=\"_blank\" rel=\"noreferrer\">modelo de gestão único e diferenciador,</a> aperfeiçoado ao longo de uma história que conta já com várias décadas.\r\n              {this.state.questions.map(question => {\r\n                return (question.chapter === 2 && question.number === 1 ?\r\n                  <>\r\n                    <Form className=\"p-4\">\r\n                      <br />\r\n                      <div>\r\n                        {question.question}\r\n                      </div>\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer1}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios1\"\r\n                        value=\"1\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer2}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios2\"\r\n                        value=\"2\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer3}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios3\"\r\n                        value=\"3\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer4}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios4\"\r\n                        value=\"4\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <br />\r\n                      {(() => {\r\n                        if (!this.state.remainingQuestions.some(e => e.id === question.id)) {\r\n                          return (\r\n                            <Button variant=\"success\">Concluída</Button>\r\n                          )\r\n                        } else {\r\n                          return (\r\n                            <Button variant=\"primary\" onClick={this.handleSubmit.bind(this, question)} disabled={!this.validateForm()}>Responder</Button>\r\n                          )\r\n                        }\r\n                      })()}\r\n                      <div>\r\n                        {this.state.submited === true && this.state.answer === question.correct.toString() ? (<Badge variant=\"success\">Success</Badge>) : this.state.submited === true ? (<Badge variant=\"danger\">Danger</Badge>) : (<></>)}\r\n                      </div>\r\n                    </Form></>\r\n                  :\r\n                  <></>\r\n                )\r\n              })\r\n              }\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card className=\"pergunta pergunta2\">\r\n          <Card.Body>\r\n            <Card.Text className=\"justifyText\">\r\n              Com 6 polos, o INESC TEC agrega atualmente 13 Centros de I&amp;D.\r\n              {this.state.questions.map(question => {\r\n                return (question.chapter === 2 && question.number === 2 ?\r\n                  <>\r\n                    <Form className=\"p-4\">\r\n                      <br />\r\n                      <div>\r\n                        {question.question}\r\n                      </div>\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer1}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios1\"\r\n                        value=\"1\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer2}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios2\"\r\n                        value=\"2\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer3}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios3\"\r\n                        value=\"3\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer4}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios4\"\r\n                        value=\"4\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <br />\r\n                      {(() => {\r\n                        if (!this.state.remainingQuestions.some(e => e.id === question.id)) {\r\n                          return (\r\n                            <Button variant=\"success\">Concluída</Button>\r\n                          )\r\n                        } else {\r\n                          return (\r\n                            <Button variant=\"primary\" onClick={this.handleSubmit.bind(this, question)} disabled={!this.validateForm()}>Responder</Button>\r\n                          )\r\n                        }\r\n                      })()}\r\n                      <div>\r\n                        {this.state.submited === true && this.state.answer === question.correct.toString() ? (<Badge variant=\"success\">Success</Badge>) : this.state.submited === true ? (<Badge variant=\"danger\">Danger</Badge>) : (<></>)}\r\n                      </div>\r\n                    </Form></>\r\n                  :\r\n                  <></>\r\n                )\r\n              })\r\n              }\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card className=\"pergunta pergunta3\">\r\n          <Card.Body>\r\n            <Card.Text className=\"justifyText\">\r\n              Os 13 centros de I&amp;D do INESC TEC estão estruturados em quatro Clusters que agrupam mais de 700\r\n              investigadores integrados e incluem investigadores contratados, investigadores de instituições de ensino\r\n              superior, bolseiros e investigadores afiliados, estagiários e ainda pessoal de apoio técnico e\r\n              administrativo.\r\n              {this.state.questions.map(question => {\r\n                return (question.chapter === 2 && question.number === 3 ?\r\n                  <>\r\n                    <Form className=\"p-4\">\r\n                      <br />\r\n                      <div>\r\n                        {question.question}\r\n                      </div>\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer1}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios1\"\r\n                        value=\"1\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer2}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios2\"\r\n                        value=\"2\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer3}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios3\"\r\n                        value=\"3\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer4}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios4\"\r\n                        value=\"4\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <br />\r\n                      {(() => {\r\n                        if (!this.state.remainingQuestions.some(e => e.id === question.id)) {\r\n                          return (\r\n                            <Button variant=\"success\">Concluída</Button>\r\n                          )\r\n                        } else {\r\n                          return (\r\n                            <Button variant=\"primary\" onClick={this.handleSubmit.bind(this, question)} disabled={!this.validateForm()}>Responder</Button>\r\n                          )\r\n                        }\r\n                      })()}\r\n                      <div>\r\n                        {this.state.submited === true && this.state.answer === question.correct.toString() ? (<Badge variant=\"success\">Success</Badge>) : this.state.submited === true ? (<Badge variant=\"danger\">Danger</Badge>) : (<></>)}\r\n                      </div>\r\n                    </Form></>\r\n                  :\r\n                  <></>\r\n                )\r\n              })\r\n              }\r\n              A missão do INESC TEC é promover avanços científicos e tecnológicos, assim como inovação de base\r\n              tecnológica, através da transferência de novos conhecimentos e tecnologias para a indústria, serviços e\r\n              administração pública.\r\n              <br />\r\n              O INESC TEC pretende ser uma instituição líder em Ciência e Tecnologia, e um dos principais atores nos\r\n              domínios de Informática, Engenharia Industrial e de Sistemas, Redes de Sistemas Inteligentes e Energia.\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card className=\"pergunta pergunta4\">\r\n          <Card.Body>\r\n            <Card.Text className=\"justifyText\">\r\n              Assim, contámos com vários parceiros.\r\n              {this.state.questions.map(question => {\r\n                return (question.chapter === 2 && question.number === 4 ?\r\n                  <>\r\n                    <Form className=\"p-4\">\r\n                      <br />\r\n                      <div>\r\n                        {question.question}\r\n                      </div>\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer1}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios1\"\r\n                        value=\"1\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer2}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios2\"\r\n                        value=\"2\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer3}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios3\"\r\n                        value=\"3\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        label={question.answer4}\r\n                        name=\"formHorizontalRadios\"\r\n                        id=\"formHorizontalRadios4\"\r\n                        value=\"4\"\r\n                        onChange={(e) => { this.setState({ answer: e.target.value }) }}\r\n                      />\r\n                      <br />\r\n                      {(() => {\r\n                        if (!this.state.remainingQuestions.some(e => e.id === question.id)) {\r\n                          return (\r\n                            <Button variant=\"success\">Concluída</Button>\r\n                          )\r\n                        } else {\r\n                          return (\r\n                            <Button variant=\"primary\" onClick={this.handleSubmit.bind(this, question)} disabled={!this.validateForm()}>Responder</Button>\r\n                          )\r\n                        }\r\n                      })()}\r\n                      <div>\r\n                        {this.state.submited === true && this.state.answer === question.correct.toString() ? (<Badge variant=\"success\">Success</Badge>) : this.state.submited === true ? (<Badge variant=\"danger\">Danger</Badge>) : (<></>)}\r\n                      </div>\r\n                    </Form></>\r\n                  :\r\n                  <></>\r\n                )\r\n              })\r\n              }\r\n              Temos ainda parcerias internacionais com a CMU Portugal, MIT Portugal e UT Austin Portugal.\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card className=\"pergunta\">\r\n          <Card.Body>\r\n            <Card.Text className=\"justifyText\">\r\n              Parabéns! Concluíste com sucesso a primeira etapa deste jogo. Está na altura de conhecer algumas das\r\n              ferramentas que temos ao teu dispor.\r\n              <br />\r\n              <br />\r\n              {button}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n} export default withRouter(Instituicao);\r\n","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nclass TasksCESE extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.routeChange = this.routeChange.bind(this);\r\n        this.routeChange2 = this.routeChange2.bind(this);\r\n\r\n        this.state = {\r\n            tasks: [],\r\n            remainingUserTasks: [],\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('https://blooming-island-42972.herokuapp.com/tasks/').then(res => {\r\n            this.setState({ tasks: res.data });\r\n        });\r\n        axios.get('https://blooming-island-42972.herokuapp.com/user/' + JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] + '/').then(res => {\r\n            this.setState({ remainingUserTasks: res.data.tasksInst })\r\n        });\r\n    }\r\n\r\n    routeChange(task) {\r\n\r\n        //url/updateUserTaskInst/userID/taskID/\r\n        axios.post('https://blooming-island-42972.herokuapp.com/updateUserTaskInst/' + JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] + '/' + task + '/')\r\n            .then(res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n            });\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    routeChange2(e) {\r\n        e.preventDefault();\r\n\r\n        let path='/chap';\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Card className=\"desafios\">\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            Bem-vindo ao CESE, o Centro de Engenharia e de Sistemas Empresariais! Seguem-se alguns desafios que acreditamos que vão facilitar a tua integração neste super centro.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                {\r\n                    this.state.tasks.map(task => {\r\n                        return task.centerService === \"CESE\" ?\r\n                            <>\r\n                                <Card className=\"desafios\">\r\n                                    <Card.Body>\r\n                                        <Card.Title>{task.task}</Card.Title>\r\n                                        <Card.Text>{task.toDo}</Card.Text>\r\n                                        {(() => {\r\n                                            if (!this.state.remainingUserTasks.some(e => e.id === task.id)) {\r\n                                                return (\r\n                                                    <Button variant=\"success\">Concluído</Button>\r\n                                                )\r\n                                            } else {\r\n                                                console.log(task);\r\n                                                return (\r\n                                                    <Button onClick={this.routeChange.bind(this, task.id)} variant=\"danger\">Concluir Desafio</Button>\r\n                                                )\r\n                                            }\r\n                                        })()}\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    })}\r\n                <Card className=\"desafios\">\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            Parabéns, concluíste com sucesso a última etapa deste jogo. Sê bem-vindo!\r\n                            <br />\r\n                            O Serviço de Recursos Humanos. Para mais informações rh@inesctec.pt\r\n                        </Card.Text>\r\n                        <Button onClick={this.routeChange2} variant=\"info\">Voltar Atrás</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n} export default withRouter(TasksCESE);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.routeChange = this.routeChange.bind(this);\r\n\r\n        this.state = {\r\n            userID: '',\r\n            user: '',\r\n            completed: false\r\n        };\r\n    }\r\n\r\n    routeChange(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        //url/updateUserQuestion/userID/questionID/\r\n        if (this.state.completed === \"false\") {\r\n            axios.post('https://blooming-island-42972.herokuapp.com/updateUserQuestion/' + this.state.userID + '/8/')\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                })\r\n        }\r\n\r\n        let path = '/chap';\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ user: JSON.parse(sessionStorage.getItem(\"user\"))[\"name\"] });\r\n        this.setState({ userID: JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] });\r\n        axios.get('https://blooming-island-42972.herokuapp.com/questionXLevel/' + JSON.parse(sessionStorage.getItem(\"user\"))[\"id\"] + '/3/1/')\r\n            .then(res => {\r\n                this.setState({ completed: res.data['question'] })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let button;\r\n        if (this.state.completed === \"false\") {\r\n            button = <Button variant=\"primary\" className=\"px-4 nextLevel\" onClick={this.routeChange}>Concluir Nivel</Button>;\r\n        } else {\r\n            button = <Button variant=\"info\" className=\"px-4 nextLevel\" onClick={this.routeChange}>Voltar Atrás</Button>;\r\n        }\r\n        return (\r\n            <div>\r\n                <h3 className=\"titleIntroduction\">Questionário</h3>\r\n                <h5>De maneira a podermos estar em constante evolução, pedimos-te que preenchas o seguinte inquérito</h5>\r\n                <br />\r\n                <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLScXWReUnKSG7uXNLfqSPvDeJ7RFJRxt4K2Ow_QVBL-UFmKrRw/viewform?embedded=true\" width=\"100%\" height=\"2556\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading…</iframe>\r\n                {button}\r\n            </div>\r\n        );\r\n    }\r\n} export default withRouter(Form);","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Navigation, Footer, Home, TasksInst, Chap, Introducao, Instituicao, TasksCESE, Form } from \"./components\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename='/'>\r\n        <Navigation />\r\n        <Switch>\r\n          <Route exact path=\"/\" exact component={Home} />\r\n          <Route path=\"/tasksInst\" exact component={TasksInst} />\r\n          <Route path=\"/chap\" exact component={Chap} />\r\n          <Route path=\"/introducao\" exact component={Introducao} />\r\n          <Route path=\"/instituicao\" exact component={Instituicao} />\r\n          <Route path=\"/tasksCESE\" exact component={TasksCESE} />\r\n          <Route path=\"/form\" exact component={Form} />\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}